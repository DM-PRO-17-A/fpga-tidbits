package fpgatidbits.Testbenches

import Chisel._
import fpgatidbits.rosetta._
import fpgatidbits.PlatformWrapper._


class TestBipolar(p: PlatformWrapperParams) extends GenericAccelerator(p) {
    val dataWidth = 21
    // val thresholds = Array(1, 1, 15, 15)


    val numMemPorts = 0
    val io = new GenericAcceleratorIF(numMemPorts, p) {

        val input = Vec.fill(128){SInt(INPUT, dataWidth)}
    // values to be output
        val output = Vec.fill(128){UInt(OUTPUT, 1)}
    }

    val BT = Module(new ComparatorWrapper(
        21,
        128,
        Array(-38, 200, -56, 63, 96, -106, 154, -25, 93, 88, -1128, 0, -23, -32, 103, 196, 97, 174, 100, -141, 15, -255, 54, -131, -31, 152, -31, 120, 116, 229, 21, -132, -170, -29, 147, -9, 207, 176, 8, 35, -77, -88, 50, 255, -41, -12, -173, -75, 234, -227, 205, 200, 243, 93, 57, -16, -4, 239, 6, 68, -68, 96, -155, 162, -147, 205, 242, 153, 150, -105, 117, -182, -178, -168, -6, 207, 146, 65, -197, -221, 223, 185, -229, -60, -174, 33, -243, -185, -106, -122, 170, -201, 24, 119, 117, -8, 117, 229, 155, -225, -230, -225, -17, 248, 98, -225, 19, -125, 107, 199, -166, 219, 53, 219, 243, 199, -206, -101, 228, 125, -172, -112, -224, 157, 184, 113, 33, 157))).io

    // FC.input_data := io.input_data
    BT.input:= Array(-8, 222, -147, -24, -105, 227, -71, 13, -236, 148, -93, -12, 61, -232, -144, -13, -150, -125, 40, -229, 179, 203, -94, -38, 191, -251, 28, 144, 143, 153, -32, -33, 225, -38, -193, -209, 255, 174, 129, 93, 110, -194, 74, 99, -24, 142, -250, 188, -249, -11, -10, -47, -36, -24, -15, 214, -182, 57, -154, -77, -109, 30, -28, 153, -186, -65, -39, 1, 253, -156, -105, 15, 14, 111, 141, -124, -227, 142, -185, -28, -79, 157, -169, -186, -22, -1, 11, 184, 33, -172, -93, 81, -26, 36, -245, -84, -88, 249, -77, -97, -25, -212, -172, -205, 81, -235, 103, -100, -74, -246, -115, -63, 79, 156, 9, -121, -210, -136, 167, -107, 204, -25, -79, 3, 128, -214, -129, 187).map(s => SInt(s, width=dataWidth))
    // io.output := BT.output.bits
}
